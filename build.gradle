apply plugin: 'java'
apply plugin: 'application'
apply from: file('gradle/idea.gradle')
apply from: 'gradle/javafx.plugin'

sourceCompatibility = 1.8
version = '0.1'

repositories {
    mavenCentral()
}

ext.antlr = [
        grammarpackage: "xanthic.parsers",
        antlrSource: 'src/main/java/xanthic/grammars',
        destinationDir: "src/generated-sources/java"
]

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile group: "org.antlr", name: "antlr4-runtime", version: "4.3"
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.4.4'
    antlr4 group: "org.antlr", name: "antlr4", version: "4.3"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-listener", "-package", antlr.grammarpackage, grammars.files].flatten()
}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

clean {
    delete antlr.destinationDir
}